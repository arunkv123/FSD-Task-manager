{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-project/add-project.component.css","webpack:///./src/app/add-project/add-project.component.html","webpack:///./src/app/add-project/add-project.component.ts","webpack:///./src/app/add-project/add-project.service.ts","webpack:///./src/app/add-task/add-task.component.css","webpack:///./src/app/add-task/add-task.component.html","webpack:///./src/app/add-task/add-task.component.ts","webpack:///./src/app/add-user/add-user.component.css","webpack:///./src/app/add-user/add-user.component.html","webpack:///./src/app/add-user/add-user.component.ts","webpack:///./src/app/add-user/add-user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/utilities/common-service.ts","webpack:///./src/app/view-task/view-task.component.css","webpack:///./src/app/view-task/view-task.component.html","webpack:///./src/app/view-task/view-task.component.ts","webpack:///./src/app/view-task/view-task.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-right {\\r\\n    text-align: right;\\r\\n    padding-right: 2%;\\r\\n}\\r\\n\\r\\n.checkbox-padding {\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.middleVert {\\r\\n    padding-top: 7%;\\r\\n}\\r\\n\\r\\n.middleVert1 {\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.text-danger {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXByb2plY3QvYWRkLXByb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkZC1wcm9qZWN0L2FkZC1wcm9qZWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93LWNlbnRlcmVkIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnJvdy1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIlO1xyXG59XHJcblxyXG4uY2hlY2tib3gtcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLm1pZGRsZVZlcnQge1xyXG4gICAgcGFkZGluZy10b3A6IDclO1xyXG59XHJcbi5taWRkbGVWZXJ0MSB7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi50ZXh0LWRhbmdlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59Il19 */\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">Add Project</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <form [formGroup]=\\\"addProjectForm\\\" (ngSubmit)=\\\"addProjectSubmit()\\\" novalidate>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"firstName\\\">Project:</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control\\\" id=\\\"projectName\\\" placeholder=\\\"Enter project name\\\" name=\\\"projectNameControl\\\" formControlName=\\\"projectNameControl\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                            <div *ngIf=\\\"(addProjectForm.controls.projectNameControl.touched && !addProjectForm.controls.projectNameControl.valid)\\\">\\n                                <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                                <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-5\\\"></div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"checkbox checkbox-padding\\\">\\n                                <label>\\n                                    <input type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"checkDatesControl\\\" formControlName=\\\"checkDatesControl\\\">Set Start and End Date\\n                                </label>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\"></div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"addProjectForm.controls.checkDatesControl.value\\\">\\n                        <div class=\\\"col-md-3\\\">{{startDate}}</div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"startDate\\\">Start Date:</label>\\n                            <div class=\\\"col-md-8\\\">\\n                                <div class=\\\"input-group\\\">\\n                                        <p-calendar  name=\\\"startDateControl\\\"   formControlName=\\\"startDateControl\\\" [showIcon]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\n                                    \\n                                </div>                   \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" *ngIf=\\\"addProjectForm.controls.checkDatesControl.value\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"endDate\\\">End Date:</label>\\n                            <div class=\\\"col-md-8\\\">                  \\n                                <div class=\\\"input-group\\\">\\n                                        <p-calendar  name=\\\"endDateControl\\\"  formControlName=\\\"endDateControl\\\"   [showIcon]=\\\"true\\\" dateFormat=\\\"yy-mm-dd\\\"></p-calendar>\\n\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                           \\n                            \\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\">priority:</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-1\\\">\\n                                        <h4 class=\\\"middleVert1\\\">0</h4>\\n                                    </div>\\n                                    <div class=\\\"col-sm-7\\\">\\n                                        <div class=\\\"middleVert\\\"></div>\\n                                        <p-slider formControlName=\\\"priorityControl\\\" [min]=\\\"0\\\" [max]=\\\"30\\\" [step]=\\\"1\\\" [style]=\\\"{'width':'200px'}\\\"></p-slider>\\n                                    </div>\\n                                    <div class=\\\"col-sm-1\\\">\\n                                        <h4 class=\\\"middleVert1\\\">30</h4>\\n                                    </div>\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <input class=\\\"form-control\\\" readonly name=\\\"priorityDisplayControl\\\" formControlName=\\\"priorityDisplayControl\\\" value=\\\"{{addProjectForm.controls.priorityControl.value}}\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\">\\n                                <div *ngIf=\\\"(addProjectForm.controls.priorityControl.touched && !addProjectForm.controls.priorityControl.valid)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                                    <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                                </div>\\n                            </div>                        \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" >Manager:</label>\\n                            <div class=\\\"col-sm-6\\\">\\n                                <input class=\\\"form-control\\\" placeholder=\\\"Select the Manager\\\" readonly  name=\\\"selectedManager\\\" formControlName=\\\"selectedManagerName\\\">\\n                            </div>\\n                            <div class=\\\"col-sm-2\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchManagersModal\\\">Search</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div> \\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <div class=\\\"col-md-4\\\"></div>\\n                            <div class=\\\"col-md-8\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-md\\\" [disabled]=\\\"addProjectForm.invalid\\\"\\n                                [ngClass]=\\\"{\\n                                    'btn-primary': addOrUpdateBtn == 'Add',\\n                                    'btn-success': addOrUpdateBtn == 'Update'\\n                                }\\\">{{addOrUpdateBtn}}</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger\\\" (click)=\\\"addProjectReset()\\\">Reset</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div>\\n                    </div>\\n                </form>                              \\n            </div>\\n        </div>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">View Projects</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"projectsList\\\">\\n                            <p-column field=\\\"projectId\\\" header=\\\"Project ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"projectName\\\" header=\\\"Project Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n\\n                                <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column field=\\\"priority\\\" header=\\\"priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"managerName\\\" header=\\\"Manager Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>                            \\n                            <p-column>\\n                                <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"updateProject(project)\\\">Update</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"suspendProject(project)\\\">Suspend</button>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n    <!-- Modal - Search Managers -->\\n    <div id=\\\"searchManagersModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n            <!-- Modal content-->\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                    <h4 class=\\\"modal-title\\\">Search Managers</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-1\\\"></div>\\n                        <div class=\\\"col-md-10\\\">\\n                            <p-dataTable [value]=\\\"usersList\\\">\\n                                <p-column field=\\\"userId\\\" header=\\\"User ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                                <p-column>\\n                                    <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignManager\\\" (click)=\\\"assignManager(user.userId, user.firstName + ' ' + user.lastName)\\\"\\n                                            data-dismiss=\\\"modal\\\">Assign</button>\\n                                    </ng-template>\\n                                </p-column>\\n                            </p-dataTable>\\n                        </div>\\n                        <div class=\\\"col-md-1\\\"></div>\\n                    </div>\\n                    <br>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    \\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #cd ></p-confirmDialog>\"","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Project } from '../entities/project';\nimport { Users } from '../entities/users';\nimport { AddProjectService } from './add-project.service';\nimport { Message, ConfirmationService } from 'primeng/api';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  templateUrl: './add-project.component.html',\n  styleUrls: ['./add-project.component.css'],\n  providers: [AddProjectService, ConfirmationService, DatePipe]\n})\n\nexport class AddProjectComponent implements OnInit {\n  msgs: Message[] = [];\n  projectsList: Project[];\n  usersList: Users[];\n  startDate: Date;\n  public addOrUpdateBtn = 'Add';\n\n\n  private addProjectForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private service: AddProjectService, private confirmationService: ConfirmationService, private datePipe: DatePipe) {\n  }\n\n  ngOnInit() {\n\n    this.formInit();\n    this.getUsers();\n    this.getAllProject();\n\n  }\n  formInit() {\n    this.addProjectForm = this.formBuilder.group({\n      projectId: [0, Validators.required],\n      projectNameControl: [null, Validators.required],\n      checkDatesControl: [null],\n      startDateControl: [this.datePipe.transform(Date.now(), 'yyyy-MM-dd').toString()],\n      endDateControl: [this.datePipe.transform(Date.now() + 86400000, 'yyyy-MM-dd').toString()],\n      status: ['Active'],\n      priorityControl: [null, Validators.required],\n      selectedManagerControl: [null, Validators.required],\n      selectedManagerName: [null, Validators.required],\n      priorityDisplayControl: [null]\n    });\n  }\n\n  getUsers() {\n    this.usersList = [];\n    this.service.getUsers()\n      .subscribe(data => { this.usersList = data; });\n  }\n  getAllProject() {\n    this.projectsList = [];\n    this.service.getAllProject()\n      .subscribe(data => { this.projectsList = data; });\n  }\n\n\n  updateProject(project: Project) {\n    this.addOrUpdateBtn = 'Update';\n    this.addProjectForm = this.formBuilder.group({\n      projectId: [project.projectId, Validators.required],\n      projectNameControl: [project.projectName, Validators.required],\n      checkDatesControl: [project.endDate === null && project.startDate === null ? false : true],\n      startDateControl: [this.datePipe.transform(project.startDate, 'yyyy-MM-dd').toString()],\n      endDateControl: [this.datePipe.transform(project.endDate, 'yyyy-MM-dd').toString()],\n      status: [project.status],\n      priorityControl: [project.priority, Validators.required],\n      selectedManagerControl: [project.managerId, Validators.required],\n      selectedManagerName: [project.managerName, Validators.required],\n      priorityDisplayControl: [null]\n    });\n\n  }\n\n  showMessage(status: boolean, message: string) {\n    this.msgs = [];\n    if (status === true) {\n      this.msgs.push({ severity: 'success', summary: 'Success', detail: message });\n    } else {\n      this.msgs.push({ severity: 'error', summary: 'Error', detail: message });\n\n    }\n    this.addProjectReset();\n\n  }\n\n\n\n  addProjectReset() {\n    this.addProjectForm.reset();\n    this.formInit();\n    this.addOrUpdateBtn = 'Add';\n  }\n\n  addProjectSubmit() {\n\n    this.service.updateProject({\n      projectId: this.addProjectForm.get('projectId').value,\n      endDate: this.addProjectForm.get('endDateControl').value,\n      startDate: this.addProjectForm.get('startDateControl').value,\n      managerId: this.addProjectForm.get('selectedManagerControl').value,\n      priority: this.addProjectForm.get('priorityControl').value,\n      projectName: this.addProjectForm.get('projectNameControl').value,\n      status: this.addProjectForm.get('status').value\n    })\n      .subscribe(data => { this.showMessage(data.status.result, data.status.message); });\n\n  }\n\n\n\n  assignManager(userId: number, mgrName: string) {\n\n    this.addProjectForm.patchValue({\n      selectedManagerControl: userId,\n      selectedManagerName: mgrName\n    });\n  }\n\n  suspendProject(project: Project) {\n\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to suspend project : ' + project.projectName + '?',\n      accept: () => {\n        project.status = 'Suspended';\n        this.service.updateProject(project)\n          .subscribe(data => { this.showMessage(data.status.result, data.status.message); });\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Users } from '../entities/users';\r\nimport { Observable } from 'rxjs';\r\nimport { UserEdit } from '../entities/useredit';\r\nimport { Status } from '../entities/status';\r\nimport { Options } from 'selenium-webdriver/chrome';\r\nimport { environment } from '../../environments/environment';\r\nimport { Project } from '../entities/project';\r\nimport { ProjectEdit } from '../entities/projectedit';\r\n\r\n@Injectable()\r\nexport class AddProjectService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getUsers(): Observable<Users[]> {\r\n\r\n        return this.http.get<Users[]>(environment.apiUrl + '/user/getAllUsers');\r\n\r\n    }\r\n\r\n    getAllProject(): Observable<Project[]> {\r\n\r\n        return this.http.get<Project[]>(environment.apiUrl + '/project/getAllProjects');\r\n\r\n    }\r\n    updateProject(proj: Project): Observable<ProjectEdit> {\r\n\r\n\r\n        return this.http.post<ProjectEdit>(environment.apiUrl + '/project/updateProject', proj);\r\n    }\r\n}\r\n\r\n","module.exports = \".row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-right {\\r\\n    text-align: right;\\r\\n    padding-right: 2%;\\r\\n}\\r\\n\\r\\n.checkbox-padding {\\r\\n    padding-left: 5px;\\r\\n}\\r\\n\\r\\n.middleVert {\\r\\n    padding-top: 7%;\\r\\n}\\r\\n\\r\\n.middleVert1 {\\r\\n    height: 20px;\\r\\n}\\r\\n\\r\\n.text-danger {\\r\\n    color: red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXRhc2svYWRkLXRhc2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUNBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2FkZC10YXNrL2FkZC10YXNrLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93LWNlbnRlcmVkIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnJvdy1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDIlO1xyXG59XHJcblxyXG4uY2hlY2tib3gtcGFkZGluZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDVweDtcclxufVxyXG5cclxuLm1pZGRsZVZlcnQge1xyXG4gICAgcGFkZGluZy10b3A6IDclO1xyXG59XHJcbi5taWRkbGVWZXJ0MSB7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbn1cclxuXHJcbi50ZXh0LWRhbmdlciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59Il19 */\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">{{formMode}}</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <form [formGroup]=\\\"addTaskForm\\\" (ngSubmit)=\\\"addTaskSubmit()\\\" novalidate>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"empId\\\">Project:</label>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"project\\\" placeholder=\\\"Select the Project\\\" readonly value=\\\"{{selectedProject}}\\\" formControlName=\\\"ProjectIdControl\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" [disabled]=\\\"formMode === 'Edit Task'\\\" data-target=\\\"#searchProjectsModal\\\">Search</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"task\\\">Task:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"task\\\" placeholder=\\\"Enter task name\\\" formControlName=\\\"taskNameControl\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-5\\\"></div>\\n                    <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"checkbox checkbox-padding\\\">\\n                            <label>\\n                                <input type=\\\"checkbox\\\" value=\\\"\\\" name=\\\"IsParentTaskControl\\\" (change)=\\\"handleChange($event)\\\" formControlName=\\\"IsParentTaskControl\\\">Parent Task</label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\"></div>\\n                </div>\\n           \\n\\n                <div class=\\\"row\\\" *ngIf=\\\"addTaskForm.controls.IsParentTaskControl.value !== true\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\">priority:</label>\\n                        <div class=\\\"col-sm-8\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <h4 class=\\\"middleVert1\\\">0</h4>\\n                                </div>\\n                                <div class=\\\"col-sm-7\\\">\\n                                    <div class=\\\"middleVert\\\"></div>\\n                                    <p-slider formControlName=\\\"priorityControl\\\" [min]=\\\"0\\\" [max]=\\\"30\\\" [step]=\\\"1\\\" [style]=\\\"{'width':'200px'}\\\"></p-slider>\\n                                </div>\\n                                <div class=\\\"col-sm-1\\\">\\n                                    <h4 class=\\\"middleVert1\\\">30</h4>\\n                                </div>\\n                                <div class=\\\"col-sm-3\\\">\\n                                    <input class=\\\"form-control\\\" readonly formControlName=\\\"priorityDisplayControl\\\"  value=\\\"{{addTaskForm.controls.priorityControl.value}}\\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <!-- <div *ngIf=\\\"(addProjectForm.controls.priorityControl.touched && !addProjectForm.controls.priorityControl.valid)\\\">\\n                            <span class=\\\"glyphicon glyphicon-info-sign text-danger\\\" aria-hidden=\\\"true\\\" style=\\\"display:inline;\\\"></span>\\n                            <p class=\\\"text-danger\\\" style=\\\"display:inline;\\\">This is a required field</p>\\n                        </div> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\"  *ngIf=\\\"addTaskForm.controls.IsParentTaskControl.value !== true\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"pTask\\\">Parent Task:</label>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"pTask\\\" placeholder=\\\"Select the Parent Task\\\" readonly  value=\\\"{{selectedTask}}\\\" formControlName=\\\"ParentTaskControl\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchPTasksModal\\\">Search</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\" *ngIf=\\\"addTaskForm.controls.IsParentTaskControl.value !== true\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"startDate\\\">Start Date:</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"input-group\\\">\\n                                    <p-calendar  name=\\\"StartDateControl\\\" formControlName=\\\"StartDateControl\\\"   [showIcon]=\\\"true\\\"></p-calendar>\\n\\n                           \\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\\"row\\\" *ngIf=\\\"addTaskForm.controls.IsParentTaskControl.value !== true\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"endDate\\\">End Date:</label>\\n                        <div class=\\\"col-md-8\\\">\\n                            <div class=\\\"input-group\\\">\\n                                    <p-calendar  name=\\\"EndDateControl\\\" formControlName=\\\"EndDateControl\\\"   [showIcon]=\\\"true\\\"></p-calendar>\\n\\n                                \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-4\\\" for=\\\"user\\\">User:</label>\\n                        <div class=\\\"col-sm-6\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"user\\\" placeholder=\\\"Select a user\\\" readonly  value=\\\"{{selectedUser}}\\\" formControlName=\\\"UserIdControl\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchUsersModal\\\">Search</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-3\\\"></div>\\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <div class=\\\"col-md-4\\\"></div>\\n                        <div class=\\\"col-md-8\\\">\\n                            <button type=\\\"submit\\\" [disabled]=\\\"addTaskForm.invalid\\\" class=\\\"btn btn-md btn-success\\\">{{btnMode}}</button>\\n                            <button type=\\\"button\\\" (click)=\\\"clearDate()\\\"  class=\\\"btn btn-md btn-danger\\\">Reset</button>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\"></div>\\n                </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Modal - Search Projects -->\\n<div id=\\\"searchProjectsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Projects</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"projectsList\\\">\\n                            <p-column field=\\\"projectId\\\" header=\\\"Project ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"projectName\\\" header=\\\"Project Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                            </ng-template></p-column>\\n                            <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                            </ng-template></p-column>\\n                            <p-column field=\\\"priority\\\" header=\\\"priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"managerName\\\" header=\\\"Manager\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>                            \\n                            <p-column>\\n                                <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <div align=\\\"center\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignProject\\\" (click)=\\\"selectProject(project.projectName, project.projectId)\\\" data-dismiss=\\\"modal\\\">Select</button>\\n                                    </div>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Modal - Search Parent Tasks -->\\n<div id=\\\"searchPTasksModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Parent Task</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"parentTasksList\\\">\\n                            <p-column field=\\\"parentId\\\" header=\\\"Parent ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"parentName\\\" header=\\\"Parent Task Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column>\\n                                <ng-template let-pTask=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <div align=\\\"center\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignProject\\\" (click)=\\\"selectPTask(pTask.parentId, pTask.parentName)\\\"\\n                                            data-dismiss=\\\"modal\\\">Select</button>\\n                                    </div>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n\\n        </div>\\n    </div>\\n</div>\\n<!-- Modal - Search Users -->\\n<div id=\\\"searchUsersModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Users</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"usersList\\\">\\n                            <p-column field=\\\"userId\\\" header=\\\"User ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"projectId\\\" header=\\\"Project ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                          \\n                            <p-column>\\n                                <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignUser\\\" (click)=\\\"assignUser(user.userId, user.firstName + ' ' + user.lastName)\\\" data-dismiss=\\\"modal\\\">Assign</button>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef, OnDestroy, NgZone, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { INgxMyDpOptions } from 'ngx-mydatepicker';\nimport { Subject } from 'rxjs';\nimport { ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Project } from '../entities/project';\nimport { TaskModel } from '../entities/task';\nimport { Users } from '../entities/users';\nimport { ViewTaskService } from '../view-task/view-task.service';\nimport { ParenTask } from '../entities/parenttask';\nimport { AddUserComponent } from '../add-user/add-user.component';\nimport { AddUserService } from '../add-user/add-user.service';\nimport { Message } from 'primeng/api';\nimport { TaskService } from '../utilities/common-service';\n\n\n@Component({\n  selector: 'add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css'],\n  changeDetection: ChangeDetectionStrategy.Default,\n  providers: [ViewTaskService, AddUserService]\n})\n\nexport class AddTaskComponent implements OnInit {\n  formMode: String = 'Add Task';\n  btnMode: String = 'Add';\n  msgs: Message[] = [];\n  selectedProject = '';\n  selectedUser = '';\n  selectedTask = '';\n  selectedUserId: Number = null;\n  selectedPTaskId: Number = null;\n  selectedProjectId: Number = null;\n\n  projectsList: Project[] = [];\n  parentTasksList: ParenTask[] = [];\n\n  usersList: Users[] = [];\n\n  private myForm: FormGroup;\n  private addTaskForm: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private taskService: TaskService,\n    private service: ViewTaskService,\n    private userService: AddUserService\n  ) {\n\n\n\n    // check the route for edit and then subscribe to data service\n    if (this.router.url === '/edittask') {\n      if (this.taskService.task !== null) {\n        this.editMode();\n        this.onFormEditInit(this.taskService.task);\n\n      }\n    } else {\n      this.onFormInit();\n      this.enableControls();\n    }\n\n    // this.addTaskForm.valueChanges.subscribe(() => {\n    //     if (this.addTaskForm.controls['IsParentTaskControl'].value === true) {\n    //         this.disableControls();\n    //     }\n    //     else {\n    //         this.enableControls();\n\n\n    //     }\n    // });\n  }\n  handleChange(event) {\n    console.log(this.addTaskForm.get('IsParentTaskControl').value);\n    if (this.addTaskForm.get('IsParentTaskControl').value === false) {\n      this.enableControls();\n    } else {\n      this.disableControls();\n    }\n  }\n\n  disableControls() {\n    this.addTaskForm.get('priorityControl').disable();\n    this.addTaskForm.get('priorityDisplayControl').disable();\n    this.addTaskForm.get('StartDateControl').disable();\n    this.addTaskForm.get('EndDateControl').disable();\n  }\n  enableControls() {\n    this.addTaskForm.get('priorityControl').enable();\n    this.addTaskForm.get('StartDateControl').enable();\n    this.addTaskForm.get('EndDateControl').enable();\n    this.addTaskForm.get('priorityDisplayControl').enable();\n  }\n  onFormInit() {\n    this.addTaskForm = this.formBuilder.group({\n      TaskId: [0],\n      ProjectIdControl: [null, Validators.required],\n      taskNameControl: [null, Validators.required],\n      IsParentTaskControl: [false],\n      priorityControl: [null, Validators.required],\n      priorityDisplayControl: [null],\n      ParentTaskControl: [null],\n      StartDateControl: [null, Validators.required],\n      EndDateControl: [null, Validators.required],\n      UserIdControl: [null]\n    });\n  }\n  onFormEditInit(task: TaskModel) {\n    this.addTaskForm = this.formBuilder.group({\n      TaskId: [task.taskId],\n      ProjectIdControl: [task.projectId, Validators.required],\n      taskNameControl: [task.taskName, Validators.required],\n      IsParentTaskControl: [task.parentId === null ? true : false],\n      priorityControl: [task.priority, Validators.required],\n      priorityDisplayControl: [task.priority],\n      ParentTaskControl: [task.parentId],\n      StartDateControl: [task.endDate, Validators.required],\n      EndDateControl: [task.startDate, Validators.required],\n      UserIdControl: [task.userId]\n    });\n    this.selectedProject = task.projectName;\n    this.selectedUser = task.userName;\n    this.selectedPTaskId = task.parentId;\n    this.selectedTask = task.parentName;\n  }\n\n  ngOnInit() {\n    this.getAllProject();\n    this.getAllParentTask();\n    this.getAllUsers();\n  }\n\n  getAllProject() {\n    this.projectsList = [];\n    this.service.getAllProject()\n      .subscribe(data => { this.projectsList = data; });\n  }\n  getAllParentTask() {\n    this.projectsList = [];\n    this.service.getAllParentTasks()\n      .subscribe(data => { this.parentTasksList = data; });\n  }\n\n  getAllUsers() {\n    this.usersList = [];\n    this.userService.getUsers()\n      .subscribe(data => { this.usersList = data; });\n  }\n\n\n\n  clearDate(): void {\n    // Clear the date using the patchValue function\n    this.addTaskForm.reset();\n  }\n\n  selectProject(projectName, projectId) {\n    this.selectedProjectId = projectId;\n    this.selectedProject = projectName;\n    this.addTaskForm.patchValue({\n      ProjectIdControl: projectId\n    });\n  }\n\n  assignUser(userId, userName) {\n    this.selectedUserId = userId;\n    this.selectedUser = userName;\n    this.addTaskForm.patchValue({\n      UserIdControl: userId\n    });\n  }\n\n  selectPTask(pTaskId, ptaskName) {\n    this.selectedPTaskId = pTaskId;\n    this.selectedTask = ptaskName;\n    this.addTaskForm.patchValue({\n      ParentTaskControl: pTaskId\n    });\n  }\n\n  addTaskSubmit() {\n\n\n    this.service.updateTask({\n      taskId: this.addTaskForm.get('TaskId').value,\n      endDate: this.addTaskForm.get('EndDateControl').value,\n      projectId: this.addTaskForm.get('ProjectIdControl').value,\n      startDate: this.addTaskForm.get('StartDateControl').value,\n      parentId: this.addTaskForm.get('ParentTaskControl').value,\n      priority: this.addTaskForm.get('priorityControl').value,\n      status: true,\n      taskName: this.addTaskForm.get('taskNameControl').value,\n      userId: this.addTaskForm.get('UserIdControl').value\n    })\n      .subscribe(data => { this.showMessage(data.status.result, data.status.message); this.clearDate(); });\n\n  }\n\n  editMode() {\n\n    this.formMode = 'Edit Task';\n    this.btnMode = 'Update';\n  }\n\n  showMessage(status: boolean, message: string) {\n    this.msgs = [];\n    if (status === true) {\n      this.msgs.push({ severity: 'success', summary: 'Success', detail: message });\n    } else {\n      this.msgs.push({ severity: 'error', summary: 'Error', detail: message });\n\n    }\n    this.getAllProject();\n\n  }\n\n\n}\n","module.exports = \".row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-right {\\r\\n    text-align: right;\\r\\n}\\r\\n\\r\\n.error {\\r\\n    font-size: 13px;\\r\\n    color: #c7254e;\\r\\n    margin-left: 10px;\\r\\n    margin-bottom: 10px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXVzZXIvYWRkLXVzZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLG1CQUFtQjtFQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FkZC11c2VyL2FkZC11c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93LWNlbnRlcmVkIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnJvdy1yaWdodCB7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufVxyXG5cclxuLmVycm9yIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiAjYzcyNTRlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIH0iXX0= */\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSave(f.value, f.valid)\\\">\\n\\n            <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Add User</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"firstName\\\">First Name:</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control firstName\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"currentUser.firstName\\\" name=\\\"firstName\\\" #firstName=\\\"ngModel\\\" required\\n                                    placeholder=\\\"Enter first name\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-5\\\"></div>\\n                        <div *ngIf=\\\"firstName.errors?.required && firstName.touched\\\" class=\\\"error col-md-5\\\">\\n                            First Name is required\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"lastName\\\">Last Name:</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"currentUser.lastName\\\" placeholder=\\\"Enter last name\\\" name=\\\"lastName\\\"\\n                                    #lastName=\\\"ngModel\\\" required>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\"></div>\\n                            <div *ngIf=\\\"lastName.errors?.required && lastName.touched\\\" class=\\\"error col-md-5\\\">\\n                                Last Name is required\\n                            </div>\\n    \\n                        </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label class=\\\"control-label col-sm-4\\\" for=\\\"empId\\\">Employee ID:</label>\\n                            <div class=\\\"col-sm-8\\\">\\n                                <input class=\\\"form-control\\\" id=\\\"empId\\\" [(ngModel)]=\\\"currentUser.employeeId\\\" name=\\\"empId\\\" placeholder=\\\"Enter employee id\\\"\\n                                    #empId=\\\"ngModel\\\" required>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-3\\\"></div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-5\\\"></div>\\n                            <div *ngIf=\\\"empId.errors?.required && empId.touched\\\" class=\\\"error col-md-5\\\">\\n                                    Employee ID is required\\n                            </div>\\n    \\n                        </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-3\\\"></div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <div class=\\\"col-md-4\\\"></div>\\n                            <div class=\\\"col-md-8\\\">\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-md btn-primary\\\" [disabled]=\\\"f.invalid\\\">{{saveButtonString}}</button>\\n                                <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger\\\" (click)=\\\"f.reset();onReset();\\\">Reset</button>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-xs-3\\\"></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">View Users</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-1\\\"></div>\\n                    <div class=\\\"col-md-10\\\">\\n\\n                        <p-dataTable [value]=\\\"userList\\\">\\n                            <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"employeeId\\\" header=\\\"Employee ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column>\\n\\n                                <ng-template let-user=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onEditClick(user)\\\" aria-label=\\\"Left Align\\\">\\n                                        <span class=\\\"fa fa-edit fa-lg\\\" aria-hidden=\\\"true\\\" ></span>\\n                                    </button>\\n\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"confirmDelete(user)\\\" aria-label=\\\"Left Align\\\">\\n                                        <span class=\\\"fa fa-trash-o fa-lg\\\" aria-hidden=\\\"true\\\"></span>\\n                                    </button>\\n\\n\\n\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n\\n                    </div>\\n                    <div class=\\\"col-md-1\\\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\" #cd ></p-confirmDialog>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AddUserService } from './add-user.service';\nimport { Users } from '../entities/users';\nimport { Message } from 'primeng/api';\nimport { ConfirmationService } from 'primeng/api';\nimport { NgForm } from '@angular/forms/src/directives/ng_form';\n\n@Component({\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css'],\n  providers: [AddUserService, ConfirmationService]\n})\n\nexport class AddUserComponent implements OnInit {\n  @ViewChild('f') form;\n  cd: any;\n  msgs: Message[] = [];\n  userList: Users[];\n  currentUser: Users;\n  saveButtonString: String;\n  status: boolean;\n  _confirmationService: ConfirmationService;\n  constructor(private service: AddUserService, private confirmationService: ConfirmationService) {\n    this._confirmationService = confirmationService;\n  }\n\n\n  ngOnInit(): void {\n    this.saveButtonString = 'Add';\n    this.onReset();\n\n    this.getUsers();\n  }\n\n  onReset() {\n    this.saveButtonString = 'Add';\n\n    this.currentUser = { userId: 0, employeeId: '', firstName: '', lastName: '' };\n    this.form.reset();\n  }\n\n  onEditClick(user: Users) {\n    this.saveButtonString = 'Edit';\n\n    this.currentUser = Object.assign({}, this.currentUser, user);\n  }\n  onSave(user: Users) {\n\n    this.updateUser(this.currentUser);\n\n  }\n\n  updateUser(user: Users) {\n\n\n    this.service.updateUsers(user)\n      .subscribe(data => {\n\n        this.showMessage(data.status.result, data.status.message);\n\n      });\n\n  }\n  showMessage(status: boolean, message: string) {\n    this.msgs = [];\n    if (status === true) {\n      this.msgs.push({ severity: 'success', summary: 'Success', detail: message });\n    } else {\n      this.msgs.push({ severity: 'error', summary: 'Error', detail: message });\n\n    }\n    this.getUsers();\n    this.onReset();\n\n  }\n  getUsers() {\n    this.service.getUsers()\n      .subscribe(data => { this.userList = data; });\n  }\n\n  confirmDelete(user: Users) {\n\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete user : ' + user.employeeId + '?',\n      accept: () => {\n        this.service.deleteUser(user)\n          .subscribe(data => {\n            this.showMessage(data.result, data.message);\n          });\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Users } from '../entities/users';\r\nimport { Observable } from 'rxjs';\r\nimport { UserEdit } from '../entities/useredit';\r\nimport { Status } from '../entities/status';\r\nimport { Options } from 'selenium-webdriver/chrome';\r\n\r\n@Injectable()\r\nexport class AddUserService {\r\n    apiEndPOint: String = 'http://localhost:9000/FSD-Project-manager-0.0.1-SNAPSHOT';\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getUsers(): Observable<Users[]> {\r\n\r\n        return this.http.get<Users[]>(this.apiEndPOint + '/user/getAllUsers');\r\n\r\n    }\r\n    updateUsers(user: Users): Observable<UserEdit> {\r\n\r\n\r\n        return this.http.post<UserEdit>(this.apiEndPOint + '/user/updateUser', user);\r\n    }\r\n    deleteUser(user: Users): Observable<Status> {\r\n\r\n\r\n        return this.http.post<Status>(this.apiEndPOint + '/user/DeleteUser', user);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { AddProjectComponent } from './add-project/add-project.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { ViewTaskComponent } from './view-task/view-task.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/adduser', pathMatch: 'full' },\n  { path: 'adduser', component: AddUserComponent },\n  { path: 'addproject', component: AddProjectComponent },\n  { path: 'addtask', component: AddTaskComponent },\n  { path: 'viewtask', component: ViewTaskComponent },\n  { path: 'edittask', component: AddTaskComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".error {\\r\\n    font-size: 13px;\\r\\n    color: #c7254e;\\r\\n    background: #f9f2f4;\\r\\n    border-radius: 3px;\\r\\n    padding: 15px;\\r\\n    margin: -26px 0 15px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG9CQUFvQjtFQUN0QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yIHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGNvbG9yOiAjYzcyNTRlO1xyXG4gICAgYmFja2dyb3VuZDogI2Y5ZjJmNDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW46IC0yNnB4IDAgMTVweDtcclxuICB9Il19 */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-static-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Project Manager</a>\\n    </div>\\n    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n      <li>\\n        <a routerLink=\\\"/adduser\\\" routerLinkActive=\\\"active\\\">Add User</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/addproject\\\" routerLinkActive=\\\"active\\\">Add Project</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/addtask\\\" routerLinkActive=\\\"active\\\">Add Task</a>\\n      </li>\\n      <li>\\n        <a routerLink=\\\"/viewtask\\\" routerLinkActive=\\\"active\\\">View Task</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Project Manager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { AddProjectComponent } from './add-project/add-project.component';\nimport { AddTaskComponent } from './add-task/add-task.component';\nimport { ViewTaskComponent } from './view-task/view-task.component';\nimport { IonRangeSliderModule } from 'ng2-ion-range-slider';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DataTableModule } from 'primeng/datatable';\nimport { GrowlModule } from 'primeng/growl';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SliderModule } from 'primeng/slider';\nimport { CalendarModule } from 'primeng/calendar';\nimport { TaskService } from './utilities/common-service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddUserComponent,\n    AddProjectComponent,\n    AddTaskComponent,\n    ViewTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    IonRangeSliderModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule, DataTableModule, GrowlModule, ConfirmDialogModule, SliderModule, CalendarModule\n  ],\n  providers: [TaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { TaskModel } from '../entities/task';\r\n\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n\r\n    public task: TaskModel;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n","module.exports = \".row-centered {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.row-right {\\r\\n    text-align: right;\\r\\n    padding-right: 2%;\\r\\n}\\r\\n\\r\\n.checkbox-padding {\\r\\n    padding-left: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlldy10YXNrL3ZpZXctdGFzay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3ZpZXctdGFzay92aWV3LXRhc2suY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3ctY2VudGVyZWQge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucm93LXJpZ2h0IHtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgcGFkZGluZy1yaWdodDogMiU7XHJcbn1cclxuXHJcbi5jaGVja2JveC1wYWRkaW5nIHtcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG59Il19 */\"","module.exports = \"<p-growl [(value)]=\\\"msgs\\\" [life]=\\\"3000\\\" [sticky]=\\\"false\\\"></p-growl>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"panel panel-default\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">View Tasks</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <div class=\\\"row\\\">            \\n                    <div class=\\\"form-group col-md-6\\\">\\n                        <label class=\\\"control-label col-sm-2\\\" for=\\\"project\\\">Project:</label>\\n                        <div class=\\\"col-sm-4\\\">\\n                            <input class=\\\"form-control\\\" id=\\\"project\\\" placeholder=\\\"Select the Project\\\" readonly value=\\\"{{selectedProject}}\\\">\\n                        </div>\\n                        <div class=\\\"col-sm-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-toggle=\\\"modal\\\" data-target=\\\"#searchProjectsModal\\\">Search</button>\\n                        </div>\\n                    </div>            \\n                </div>            \\n                <br>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"tasksList\\\">\\n                            <p-column field=\\\"taskId\\\" header=\\\"Task ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"taskName\\\" header=\\\"Task Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"parentName\\\" header=\\\"Parent Task\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                          \\n                            <p-column field=\\\"priority\\\" header=\\\"priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                    <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                                </ng-template>\\n                            </p-column>\\n                            <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                            </ng-template></p-column>\\n                            <p-column field=\\\"status\\\" header=\\\"status\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\">\\n                                    <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                            <span>{{project[col.field]==true?'Active':'Ended'}}</span>\\n                                        </ng-template>\\n                            </p-column>\\n                            \\n                            <p-column field=\\\"status\\\">\\n                                <ng-template let-col let-project=\\\"rowData\\\" pTemplate=\\\"body\\\" >\\n                                    \\n                                    <div align=\\\"center\\\" *ngIf=\\\"project[col.field]\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"editTask(project)\\\">Edit</button>\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"endTask(project)\\\">End Task</button>\\n                                    </div>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>            \\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Modal - Search Projects -->\\n<div id=\\\"searchProjectsModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n        <!-- Modal content-->\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Search Projects</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-12\\\">\\n                        <p-dataTable [value]=\\\"projectsList\\\">\\n                            <p-column field=\\\"projectId\\\" header=\\\"Project ID\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"projectName\\\" header=\\\"Project Name\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"startDate\\\" header=\\\"Start Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                            </ng-template></p-column>\\n                            <p-column field=\\\"endDate\\\" header=\\\"End Date\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"> <ng-template let-col let-project=\\\"rowData\\\" let-ri=\\\"rowIndex\\\" pTemplate=\\\"body\\\">\\n                                <span>{{project[col.field]|date:'dd/MM/yyyy'}}</span>\\n                            </ng-template></p-column>\\n                            <p-column field=\\\"priority\\\" header=\\\"priority\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>\\n                            <p-column field=\\\"managerName\\\" header=\\\"Manager\\\" sortable=\\\"true\\\" [filter]=\\\"true\\\" filterMatchMode=\\\"contains\\\"></p-column>                            \\n                            <p-column>\\n                                <ng-template let-project=\\\"rowData\\\" pTemplate=\\\"body\\\">\\n                                    <div align=\\\"center\\\">\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-sm\\\" id=\\\"assignProject\\\" (click)=\\\"assignProject(project.projectName, project.projectId)\\\" data-dismiss=\\\"modal\\\">Select</button>\\n                                    </div>\\n                                </ng-template>\\n                            </p-column>\\n                        </p-dataTable>\\n                    </div>\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"fa fa-question-circle\\\" width=\\\"425\\\"  ></p-confirmDialog>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AddTaskComponent } from '../add-task/add-task.component';\nimport { Router } from '@angular/router';\nimport { TaskModel } from '../entities/task';\nimport { Project } from '../entities/project';\nimport { ViewTaskService } from './view-task.service';\nimport { TaskService } from '../utilities/common-service';\nimport { ConfirmationService, Message } from 'primeng/api';\n\n@Component({\n  templateUrl: './view-task.component.html',\n  styleUrls: ['./view-task.component.css'],\n  providers: [ViewTaskService, ConfirmationService]\n})\n\nexport class ViewTaskComponent implements OnInit {\n  msgs: Message[] = [];\n\n  tasksList: TaskModel[] = [];\n\n  projectsList: Project[] = [];\n  selectedProject: String;\n  selectedProjectId: Number;\n\n  constructor(private router: Router, private taskService: TaskService, private service: ViewTaskService, private confirmationService: ConfirmationService) { }\n  ngOnInit() {\n    this.getAllProject();\n  }\n  assignProject(projName, projId) {\n    this.selectedProjectId = projId;\n    this.selectedProject = projName;\n    this.getAllTask(projId);\n  }\n\n  getAllProject() {\n    this.projectsList = [];\n    this.service.getAllProject()\n      .subscribe(data => { this.projectsList = data; });\n  }\n\n  getAllTask(id: Number) {\n    this.service.getAllTasks()\n      .subscribe(data => {\n        this.tasksList = data.filter(\n          task => task.projectId === id);\n      });\n  }\n  editTask(task: TaskModel) {\n    this.taskService.task = task;\n    this.router.navigate(['/edittask']);\n\n  }\n  endTask(task: TaskModel) {\n\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to end this task?',\n      accept: () => {\n        task.status = false;\n        this.service.updateTask(task)\n          .subscribe(data => { this.showMessage(data.status.result, data.status.message); });\n      }\n    });\n  }\n\n  showMessage(status: boolean, message: string) {\n    this.msgs = [];\n    if (status === true) {\n      this.msgs.push({ severity: 'success', summary: 'Success', detail: message });\n    } else {\n      this.msgs.push({ severity: 'error', summary: 'Error', detail: message });\n\n    }\n    this.getAllTask(this.selectedProjectId);\n\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { Users } from '../entities/users';\r\nimport { Observable } from 'rxjs';\r\nimport { UserEdit } from '../entities/useredit';\r\nimport { Status } from '../entities/status';\r\nimport { Options } from 'selenium-webdriver/chrome';\r\nimport { environment } from '../../environments/environment';\r\nimport { Project } from '../entities/project';\r\nimport { ProjectEdit } from '../entities/projectedit';\r\nimport { TaskModel } from '../entities/task';\r\nimport { ParenTask } from '../entities/parenttask';\r\nimport { TaskEdit } from '../entities/taskedit';\r\n\r\n@Injectable()\r\nexport class ViewTaskService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n\r\n    getAllProject(): Observable<Project[]> {\r\n\r\n        return this.http.get<Project[]>(environment.apiUrl + '/project/getAllProjects');\r\n\r\n    }\r\n\r\n\r\n    getAllTasks(): Observable<TaskModel[]> {\r\n\r\n        return this.http.get<TaskModel[]>(environment.apiUrl + '/task/getAllTasks');\r\n\r\n    }\r\n\r\n\r\n    updateTask(task: TaskModel): Observable<TaskEdit> {\r\n\r\n        return this.http.post<TaskEdit>(environment.apiUrl + '/task/updateTask', task);\r\n\r\n    }\r\n\r\n\r\n    getAllParentTasks(): Observable<ParenTask[]> {\r\n\r\n        return this.http.get<ParenTask[]>(environment.apiUrl + '/task/getAllParentTasks');\r\n\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:9000/FSD-Project-manager-0.0.1-SNAPSHOT'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}